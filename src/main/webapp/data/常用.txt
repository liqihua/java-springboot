<form:select path="" class="input-medium">
	<form:option value="" label=""/>
	<form:options items="${一个Map}"   htmlEscape="true"/>
</form:select>

${fnc:getDictList('')}
${fnc:getDictLabel(, '' ,'') }

${fnc:getAllProvince()}
${fnc:getCityMap(entity.cityId)}
${fnc:getDistrictMap(entity.districtId)}

${fnc:getProvinceName(entity.provinceId)}
${fnc:getCityName(entity.cityId)}
${fnc:getDistrictName(entity.districtId)}

${fnc:getUploadPrefix()}

enctype="multipart/form-data"

notBlank()
isDouble()
isNaN()


将json字符串转换成json对象 
JSON.parse(jsonstr);

将json对象转换成json对符串 
JSON.stringify(jsonobj);


$.ajax( {
	url : "",
	data : {},
	type : "post",
	dataType : "json",
	success : function(data) {
		
	},error: function(XMLHttpRequest, textStatus, errorThrown) {
		console.log("error : url");
    }
});


arr.splice(i,1);//删除数组arr第i个位置起，删除1个元素

inLoading("className")

JSON.parse(jsonstr); //可以将json字符串转换成json对象 
JSON.stringify(jsonobj); //可以将json对象转换成json对符串 


//对某个方法返回结果缓存，根据参数作为key缓存返回结果
@Cacheable(value="set名称")

//清空某个set的缓存数据
//allEntries=false：只根据参数删除相应key-value；allEntries=true：清空整个set所有key-value，默认false
//beforeInvocation=true：方法执行前先清空；beforeInvocation=false：方法执行后再清空，默认false
@CacheEvict(value="set名称",allEntries=true,beforeInvocation=true)


